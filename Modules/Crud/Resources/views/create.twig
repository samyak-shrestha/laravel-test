{% extends "crud::layouts.master" %}

{% block content %}

{% include 'crud::message' %}

<div align="right">
    <a href="{{ route('crud.index') }}" class="btn btn-default">Back</a>
</div>
<h1 id="title"> </h1>

<div id="form-submit-dom"> 

    {# <div class="alert alert-success" v-if="message"> #}
            <h3 v-html="message"> </h3>
    {# </div> #}
    

    <form id="crud-submit-form" data-parsley-validate @submit.prevent="handleSubmit" enctype="multipart/form-data">
    {# <input type="hidden" name="_token" id="token" value="{{ csrf_token() }}"> #}

        <div class="form-group" v-bind:class="{ 'has-error' : errors.firstName }">
            <label class="col-md-4 text-right" >First Name</label>
            <div class="col-md-8">
                <input type="text" name="firstName"  required data-parsley-trigger="onChange" v-model="post.firstName" class="form-control input-lg" autocomplete="off" /> 
                <span v-if="errors.firstName" :errors="errors" v-html="errors.firstName[0]">
                {# v-if="errors.firstName && !post.firstName" #}
                </span>
            </div>
        </div>
<br />
        <br />
  <div class="form-group"  v-bind:class="{ 'has-error' : errors.image }">
            <label class="col-md-4 text-right">image</label>
            <div class="col-md-8">
                <input type="file" name="image"  required v-model="post.image" v-on:change="uploadImage" /> 
                
                <span v-if="errors.image" v-html="errors.image[0]">
                </span>
                {# <form-error v-if="errors.image" v-html="errors.image[0]">
                </form-error> #}
            </div>
        </div>

        <br />
        <br />

        <div class="form-group"  v-bind:class="{ 'has-error' : errors.lastName }">
            <label class="col-md-4 text-right">Last Name</label>
            <div class="col-md-8">
                <input type="text" name="lastName"  required data-parsley-trigger="onfocusout" v-model="post.lastName" class="form-control input-lg" autocomplete="off"/> 
                <span v-if="errors.lastName" v-html="errors.lastName[0]">
                </span>
                {# <form-error v-if="errors.lastName" v-html="errors.lastName[0]">
                </form-error> #}
            </div>
        </div>

        <br /><br />

        <div class="form-group text-center">
            <button type="submit" class="btn btn-primary input-lg" v-bind:disabled="isLoading">Submit</button>
        </div>

    </form>
</div>

{% endblock %}


{% block scripts %}


{# action="{{ route('crud.store') }}" enctype="multipart/form-data" #}
<script type="text/javascript">
{% include 'crud::initial' %}

document.getElementById("title").innerHTML = "Hello JavaScript!";

{# $('#crud-submit-form').parsley(); #}
{# errorComputedFunc #}
    const app = new Vue({
        el: '#form-submit-dom',
        data: initial,
        methods: {
            uploadImage: function(){
                 const formData = jQuery('#crud-submit-form').serialize();
                
                console.log('formdata',formData);
                console.log('upload image called');
            },
            handleSubmit: function(event) {

                {# loadProgressBar()
                const url = 'https://media.giphy.com/media/C6JQPEUsZUyVq/giphy.gif'; #}

                this.isLoading = true;

                const formData = jQuery('#crud-submit-form').serialize();
                
                console.log('formdata',formData);
                 console.log('event',event);
                console.log('event.target',event.target.files[0]);
                 {# this.post.image = event.target.files[0]; #}

                axios.post('{{ route('crud.store') }}', formData)
                .then(function (response) {
                    if(response.status === 200){
                        app.errors = response.data.errors;
                        app.isLoading = true;
                        {# window.location = response.data.redirect; #}
                    } else {
                        app.message = 'something went wrong';
                    }
                })
                .catch(function (error) {
                    if(error.response.status != 200){
                        app.message = error.response.message;
                        app.message = error.response.data.message;
                        app.errors = error.response.data.errors;
                        app.isLoading = false;
                    }
                });
            },  //end of handleSubmit
        } //end of method
    });

</script>

{% endblock %}